"use strict";

/*!
 * jQuery UI Touch Punch 0.2.3
 *
 * Copyright 2011â€“2014, Dave Furfero
 * Dual licensed under the MIT or GPL Version 2 licenses.
 *
 * Depends:
 *  jquery.ui.widget.js
 *  jquery.ui.mouse.js
 */
!function (a) {
  function f(a, b) {
    if (!(a.originalEvent.touches.length > 1)) {
      a.preventDefault();
      var c = a.originalEvent.changedTouches[0],
          d = document.createEvent("MouseEvents");
      d.initMouseEvent(b, !0, !0, window, 1, c.screenX, c.screenY, c.clientX, c.clientY, !1, !1, !1, !1, 0, null), a.target.dispatchEvent(d);
    }
  }

  if (a.support.touch = "ontouchend" in document, a.support.touch) {
    var e,
        b = a.ui.mouse.prototype,
        c = b._mouseInit,
        d = b._mouseDestroy;
    b._touchStart = function (a) {
      var b = this;
      !e && b._mouseCapture(a.originalEvent.changedTouches[0]) && (e = !0, b._touchMoved = !1, f(a, "mouseover"), f(a, "mousemove"), f(a, "mousedown"));
    }, b._touchMove = function (a) {
      e && (this._touchMoved = !0, f(a, "mousemove"));
    }, b._touchEnd = function (a) {
      e && (f(a, "mouseup"), f(a, "mouseout"), this._touchMoved || f(a, "click"), e = !1);
    }, b._mouseInit = function () {
      var b = this;
      b.element.bind({
        touchstart: a.proxy(b, "_touchStart"),
        touchmove: a.proxy(b, "_touchMove"),
        touchend: a.proxy(b, "_touchEnd")
      }), c.call(b);
    }, b._mouseDestroy = function () {
      var b = this;
      b.element.unbind({
        touchstart: a.proxy(b, "_touchStart"),
        touchmove: a.proxy(b, "_touchMove"),
        touchend: a.proxy(b, "_touchEnd")
      }), d.call(b);
    };
  }
}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianF1ZXJ5LnVpLnRvdWNoLXB1bmNoLm1pbi5qcyIsIm5hbWVzIjpbImEiLCJmIiwiYiIsIm9yaWdpbmFsRXZlbnQiLCJ0b3VjaGVzIiwibGVuZ3RoIiwicHJldmVudERlZmF1bHQiLCJjIiwiY2hhbmdlZFRvdWNoZXMiLCJkIiwiZG9jdW1lbnQiLCJjcmVhdGVFdmVudCIsImluaXRNb3VzZUV2ZW50Iiwid2luZG93Iiwic2NyZWVuWCIsInNjcmVlblkiLCJjbGllbnRYIiwiY2xpZW50WSIsInRhcmdldCIsImRpc3BhdGNoRXZlbnQiLCJzdXBwb3J0IiwidG91Y2giLCJlIiwidWkiLCJtb3VzZSIsInByb3RvdHlwZSIsIl9tb3VzZUluaXQiLCJfbW91c2VEZXN0cm95IiwiX3RvdWNoU3RhcnQiLCJfbW91c2VDYXB0dXJlIiwiX3RvdWNoTW92ZWQiLCJfdG91Y2hNb3ZlIiwiX3RvdWNoRW5kIiwiZWxlbWVudCIsImJpbmQiLCJ0b3VjaHN0YXJ0IiwicHJveHkiLCJ0b3VjaG1vdmUiLCJ0b3VjaGVuZCIsImNhbGwiLCJ1bmJpbmQiLCJqUXVlcnkiXSwic291cmNlcyI6WyJqcXVlcnkudWkudG91Y2gtcHVuY2gubWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gKiBqUXVlcnkgVUkgVG91Y2ggUHVuY2ggMC4yLjNcclxuICpcclxuICogQ29weXJpZ2h0IDIwMTHigJMyMDE0LCBEYXZlIEZ1cmZlcm9cclxuICogRHVhbCBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIG9yIEdQTCBWZXJzaW9uIDIgbGljZW5zZXMuXHJcbiAqXHJcbiAqIERlcGVuZHM6XHJcbiAqICBqcXVlcnkudWkud2lkZ2V0LmpzXHJcbiAqICBqcXVlcnkudWkubW91c2UuanNcclxuICovXHJcbiEoZnVuY3Rpb24gKGEpIHtcclxuICBmdW5jdGlvbiBmKGEsIGIpIHtcclxuICAgIGlmICghKGEub3JpZ2luYWxFdmVudC50b3VjaGVzLmxlbmd0aCA+IDEpKSB7XHJcbiAgICAgIGEucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdmFyIGMgPSBhLm9yaWdpbmFsRXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0sXHJcbiAgICAgICAgZCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiTW91c2VFdmVudHNcIik7XHJcbiAgICAgIGQuaW5pdE1vdXNlRXZlbnQoXHJcbiAgICAgICAgYixcclxuICAgICAgICAhMCxcclxuICAgICAgICAhMCxcclxuICAgICAgICB3aW5kb3csXHJcbiAgICAgICAgMSxcclxuICAgICAgICBjLnNjcmVlblgsXHJcbiAgICAgICAgYy5zY3JlZW5ZLFxyXG4gICAgICAgIGMuY2xpZW50WCxcclxuICAgICAgICBjLmNsaWVudFksXHJcbiAgICAgICAgITEsXHJcbiAgICAgICAgITEsXHJcbiAgICAgICAgITEsXHJcbiAgICAgICAgITEsXHJcbiAgICAgICAgMCxcclxuICAgICAgICBudWxsXHJcbiAgICAgICksXHJcbiAgICAgICAgYS50YXJnZXQuZGlzcGF0Y2hFdmVudChkKTtcclxuICAgIH1cclxuICB9XHJcbiAgaWYgKCgoYS5zdXBwb3J0LnRvdWNoID0gXCJvbnRvdWNoZW5kXCIgaW4gZG9jdW1lbnQpLCBhLnN1cHBvcnQudG91Y2gpKSB7XHJcbiAgICB2YXIgZSxcclxuICAgICAgYiA9IGEudWkubW91c2UucHJvdG90eXBlLFxyXG4gICAgICBjID0gYi5fbW91c2VJbml0LFxyXG4gICAgICBkID0gYi5fbW91c2VEZXN0cm95O1xyXG4gICAgKGIuX3RvdWNoU3RhcnQgPSBmdW5jdGlvbiAoYSkge1xyXG4gICAgICB2YXIgYiA9IHRoaXM7XHJcbiAgICAgICFlICYmXHJcbiAgICAgICAgYi5fbW91c2VDYXB0dXJlKGEub3JpZ2luYWxFdmVudC5jaGFuZ2VkVG91Y2hlc1swXSkgJiZcclxuICAgICAgICAoKGUgPSAhMCksXHJcbiAgICAgICAgKGIuX3RvdWNoTW92ZWQgPSAhMSksXHJcbiAgICAgICAgZihhLCBcIm1vdXNlb3ZlclwiKSxcclxuICAgICAgICBmKGEsIFwibW91c2Vtb3ZlXCIpLFxyXG4gICAgICAgIGYoYSwgXCJtb3VzZWRvd25cIikpO1xyXG4gICAgfSksXHJcbiAgICAgIChiLl90b3VjaE1vdmUgPSBmdW5jdGlvbiAoYSkge1xyXG4gICAgICAgIGUgJiYgKCh0aGlzLl90b3VjaE1vdmVkID0gITApLCBmKGEsIFwibW91c2Vtb3ZlXCIpKTtcclxuICAgICAgfSksXHJcbiAgICAgIChiLl90b3VjaEVuZCA9IGZ1bmN0aW9uIChhKSB7XHJcbiAgICAgICAgZSAmJlxyXG4gICAgICAgICAgKGYoYSwgXCJtb3VzZXVwXCIpLFxyXG4gICAgICAgICAgZihhLCBcIm1vdXNlb3V0XCIpLFxyXG4gICAgICAgICAgdGhpcy5fdG91Y2hNb3ZlZCB8fCBmKGEsIFwiY2xpY2tcIiksXHJcbiAgICAgICAgICAoZSA9ICExKSk7XHJcbiAgICAgIH0pLFxyXG4gICAgICAoYi5fbW91c2VJbml0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBiID0gdGhpcztcclxuICAgICAgICBiLmVsZW1lbnQuYmluZCh7XHJcbiAgICAgICAgICB0b3VjaHN0YXJ0OiBhLnByb3h5KGIsIFwiX3RvdWNoU3RhcnRcIiksXHJcbiAgICAgICAgICB0b3VjaG1vdmU6IGEucHJveHkoYiwgXCJfdG91Y2hNb3ZlXCIpLFxyXG4gICAgICAgICAgdG91Y2hlbmQ6IGEucHJveHkoYiwgXCJfdG91Y2hFbmRcIiksXHJcbiAgICAgICAgfSksXHJcbiAgICAgICAgICBjLmNhbGwoYik7XHJcbiAgICAgIH0pLFxyXG4gICAgICAoYi5fbW91c2VEZXN0cm95ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIHZhciBiID0gdGhpcztcclxuICAgICAgICBiLmVsZW1lbnQudW5iaW5kKHtcclxuICAgICAgICAgIHRvdWNoc3RhcnQ6IGEucHJveHkoYiwgXCJfdG91Y2hTdGFydFwiKSxcclxuICAgICAgICAgIHRvdWNobW92ZTogYS5wcm94eShiLCBcIl90b3VjaE1vdmVcIiksXHJcbiAgICAgICAgICB0b3VjaGVuZDogYS5wcm94eShiLCBcIl90b3VjaEVuZFwiKSxcclxuICAgICAgICB9KSxcclxuICAgICAgICAgIGQuY2FsbChiKTtcclxuICAgICAgfSk7XHJcbiAgfVxyXG59KShqUXVlcnkpO1xyXG4iXSwibWFwcGluZ3MiOiI7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFFLFVBQVVBLENBQVYsRUFBYTtFQUNiLFNBQVNDLENBQVQsQ0FBV0QsQ0FBWCxFQUFjRSxDQUFkLEVBQWlCO0lBQ2YsSUFBSSxFQUFFRixDQUFDLENBQUNHLGFBQUYsQ0FBZ0JDLE9BQWhCLENBQXdCQyxNQUF4QixHQUFpQyxDQUFuQyxDQUFKLEVBQTJDO01BQ3pDTCxDQUFDLENBQUNNLGNBQUY7TUFDQSxJQUFJQyxDQUFDLEdBQUdQLENBQUMsQ0FBQ0csYUFBRixDQUFnQkssY0FBaEIsQ0FBK0IsQ0FBL0IsQ0FBUjtNQUFBLElBQ0VDLENBQUMsR0FBR0MsUUFBUSxDQUFDQyxXQUFULENBQXFCLGFBQXJCLENBRE47TUFFQUYsQ0FBQyxDQUFDRyxjQUFGLENBQ0VWLENBREYsRUFFRSxDQUFDLENBRkgsRUFHRSxDQUFDLENBSEgsRUFJRVcsTUFKRixFQUtFLENBTEYsRUFNRU4sQ0FBQyxDQUFDTyxPQU5KLEVBT0VQLENBQUMsQ0FBQ1EsT0FQSixFQVFFUixDQUFDLENBQUNTLE9BUkosRUFTRVQsQ0FBQyxDQUFDVSxPQVRKLEVBVUUsQ0FBQyxDQVZILEVBV0UsQ0FBQyxDQVhILEVBWUUsQ0FBQyxDQVpILEVBYUUsQ0FBQyxDQWJILEVBY0UsQ0FkRixFQWVFLElBZkYsR0FpQkVqQixDQUFDLENBQUNrQixNQUFGLENBQVNDLGFBQVQsQ0FBdUJWLENBQXZCLENBakJGO0lBa0JEO0VBQ0Y7O0VBQ0QsSUFBTVQsQ0FBQyxDQUFDb0IsT0FBRixDQUFVQyxLQUFWLEdBQWtCLGdCQUFnQlgsUUFBbkMsRUFBOENWLENBQUMsQ0FBQ29CLE9BQUYsQ0FBVUMsS0FBN0QsRUFBcUU7SUFDbkUs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
